apiVersion: core.oam.dev/v1beta1
kind: Application
metadata:
  name: custom-template-provider
  annotations:
    version: v0.0.1
    description: 'An application with a provider and component built for extending wasmCloud with custom capabilities'
spec:
  components:

    ##########################
    # HTTP handler component #
    ##########################

    - name: test-component
      type: component
      properties:
        image: file://./component-http-hello/build/http_hello_world_s.wasm
      traits:
        - type: spreadscaler
          properties:
            instances: 1
        # Link the component to the provider on wasmcloud:example/system-info
        # - type: link
        #   properties:
        #     target: custom-template
        #     namespace: wasmcloud
        #     package: example
        #     interfaces: [system-info]

    # ###################
    # # Custom Provider #
    # ###################

    # - name: custom-template
    #   type: capability
    #   properties:
    #     image: file://./provider-custom/build/wasmcloud-provider-custom-template.par.gz
    #     id: custom-template
    #     config:
    #       - name: provider-config
    #         properties:
    #           foo: bar
    #   traits:
    #     # Link the provider to the component on wasmcloud:example/process-data
    #     - type: link
    #       properties:
    #         target: test-component
    #         namespace: wasmcloud
    #         package: example
    #         interfaces: [process-data]

    ########################
    # HTTP server provider #
    ########################

    # Add a capability provider that enables HTTP access
    - name: httpserver
      type: capability
      properties:
        image: ghcr.io/wasmcloud/http-server:0.23.1
      traits:
        # Establish a unidirectional link from this http server provider (the "source")
        # to the `http-component` component (the "target") so the component can handle incoming HTTP requests,
        #
        # The source (this provider) is configured such that the HTTP server listens on 127.0.0.1:8080
        - type: link
          properties:
            target: test-component
            namespace: wasi
            package: http
            interfaces: [incoming-handler]
            source_config:
              - name: default-http
                properties:
                  address: 127.0.0.1:8082
